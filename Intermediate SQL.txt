1. We'll take the CASE
- Basic CASE statements
  SELECT
    -- Select the team long name and team API id
    team_long_name,
    team_api_id
  FROM teams_germany
  -- Only include FC Schalke 04 and FC Bayern Munich
  WHERE team_long_name in ('FC Schalke 04', 'FC Bayern Munich');

  -- Identify the home team as Bayern Munich, Schalke 04, or neither
  SELECT 
      CASE WHEN hometeam_id = 10189 THEN 'FC Schalke 04'
           WHEN hometeam_id = 9823 THEN 'FC Bayern Munich'
           ELSE 'Other' END AS home_team,
    COUNT(id) AS total_matches
  FROM matches_germany
  -- Group by the CASE statement alias
  GROUP BY home_team;

- CASE statements comparing column values
  SELECT 
    -- Select the date of the match
    date,
    -- Identify home wins, losses, or ties
    CASE WHEN home_goal > away_goal THEN 'Home win!'
           WHEN home_goal < away_goal THEN 'Home loss :(' 
           ELSE 'Tie' END AS outcome
  FROM matches_spain;
  
  SELECT 
    m.date,
    --Select the team long name column and call it 'opponent'
    t.team_long_name AS opponent, 
    -- Complete the CASE statement with an alias
    CASE WHEN home_goal > away_goal THEN 'Home win!'
             WHEN home_goal < away_goal THEN 'Home loss :(' 
             ELSE 'Tie' END AS outcome
  FROM matches_spain AS m
  -- Left join teams_spain onto matches_spain
  left join teams_spain AS t
  on m.awayteam_id = t.team_api_id;

  SELECT 
    m.date,
    t.team_long_name AS opponent,
      -- Complete the CASE statement with an alias
    case when m.home_goal > away_goal THEN 'Barcelona win!'
          when m.home_goal < away_goal THEN 'Barcelona loss :(' 
          else 'Tie' end as outcome 
  FROM matches_spain AS m
  LEFT JOIN teams_spain AS t 
  ON m.awayteam_id = t.team_api_id
  -- Filter for Barcelona as the home team
  WHERE m.hometeam_id = 8634; 




































